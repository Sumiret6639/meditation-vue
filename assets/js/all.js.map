{"version":3,"sources":["all.js"],"names":["outline","document","querySelector","outlineLength","getTotalLength","style","strokeDasharray","strokeDashoffset","vue","Vue","el","data","isPaused","currentTime","defaultDuration","elapsedTime","seconds","minutes","type","methods","changeSongStatus","vm","$refs","audio","play","pause","changeSongType","src","soundType","$nextTick","getTime","resetTimeDisplay","duration","Math","floor","ontimeupdate","movingStyle","time","bgiStyle","img","mounted"],"mappings":"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","file":"all.js","sourcesContent":["const outline = document.querySelector(\".moving-line circle\")\nconst outlineLength = outline.getTotalLength();\n\noutline.style.strokeDasharray = outlineLength;\noutline.style.strokeDashoffset = outlineLength;\n\n\nvar vue = new Vue({\n  el: '#app',\n  data: {\n    isPaused: true,\n    currentTime: 0,\n    defaultDuration: 600,\n    elapsedTime: 0,\n    seconds: 0,\n    minutes: 0,\n    type: \"rain\",\n    outlineLength: outlineLength,\n  },\n\n  methods: {\n    changeSongStatus(){\n      const vm = this;\n      if (vm.isPaused){\n        vm.$refs.audio.play();\n        vm.isPaused = true;\n      } else{\n        vm.$refs.audio.pause();\n        vm.isPaused = false;\n      }\n    },\n\n    changeSongType(){\n      const vm = this;\n      vm.$refs.audio.src = vm.soundType;\n      vm.$nextTick(() => {\n        vm.isPaused = false;\n        vm.$refs.audio.play();\n        vm.getTime();\n      })\n    },\n\n    resetTimeDisplay(duration){\n      const vm = this;\n      vm.defaultDuration = 0;\n      vm.defaultDuration = duration;\n      vm.seconds = Math.floor(duration % 60);\n      vm.minutes = Math.floor(duration / 60);\n    },\n\n    getTime(){\n      const vm = this;\n      vm.$refs.audio.ontimeupdate = () => {\n        vm.currentTime = vm.$refs.audio.currentTime;\n        vm.elapsedTime = vm.defaultDuration - vm.currentTime;\n        \n        vm.seconds = Math.floor(vm.elapsedTime % 60);\n        vm.minutes = Math.floor(vm.elapsedTime / 60)\n\n        if (vm.currentTime >= vm.defaultDuration){\n          vm.$refs.audio.pause();\n          vm.isPaused = true;\n          vm.seconds =  0;\n          vm.minutes =  0;\n        }\n      } \n    },\n\n    movingStyle(time) {\n      const vm = this;\n      return {\n        \"stroke-dashoffset\": -( time / vm.defaultDuration) * vm.outlineLength\n      }\n    },\n\n    bgiStyle(img) {\n      return {\n        \"background-image\": `url(../assets/images/${img}.jpg)`\n      }\n    }\n  },\n\n\n  mounted() {\n    const vm = this;\n    vm.$refs.audio.play();\n    vm.$refs.audio.pause();\n  },\n})\n"]}